         Excerpt from Request for Comments 1392, Page 21
         <https://www.rfc-editor.org/rfc/rfc1392#page-21>:
                    "Internet Users' Glossary"

hacker
   A person who delights in having an intimate understanding of the
   internal workings of a system, computers and computer networks in
   particular.  The term is often misused in a pejorative context,
   where "cracker" would be the correct term.  See also: cracker.

                              * * *

Welcome to the team!!!

I am not your leader today, but I hope y'all are still with me...

   * Add your changes in CHANGES.  (Copy the example.)
   * If you contribute, your name goes into AUTHORS
     and you get a virtual Cookie! :P

   ***--> Once we decide on a project, put the specs in here,
          and create an INSTALL file (with NO file extension)
          for detailed installation/deployment process.

       [[ If the Club permits and everyone is fine with it, we
          may even release it as FOSS! ]]

Remember to WRAP your lines at column 72/76/80 so that the text
looks good IRRESPECTIVE of any fancy IDE or Gitweb code browser.


*** Setup

The SvelteKit frontend is in web/ and the Flask backend is in app/.

***--> Node.js + pnpm

Install Node.js 22.x by either installing from here:
<https://nodejs.org/en/download> (probably the most straightforward
way to install Node.js if you are Windows), or by using a Node
version manager such as <https://github.com/nvm-sh/nvm> and
<https://github.com/tj/n>.
(This is required for the Svelte-Vercel adapter plugin to work...)

Then install pnpm <https://pnpm.io/installation>:

    corepack enable pnpm
    corepack use pnpm@latest-10

On Windows you may use WinGet:

    winget install -e --id pnpm.pnpm

... among many other package managers.

(See <https://pnpm.io/installation#on-windows> for a very exhaustive list
of options.)

***--> Python 3 + Poetry

You surely have Python installed already or know to install it easily, right?

As for Poetry, you can install it as a standalone program from a package
manager of your choice; or use the official installer; or install with Pip.
There are many options; pick one and go with it....
(See also <https://python-poetry.org/docs/>)

***--> Running frontend

    cd app
    pnpm install    # or `pnpm i' if you are feeling lazy
    pnpm run dev

The README.md automatically generated by `sv new' is at times helpful :)

***--> Running backend

I assume you are returned to the toplevel directory for this.  (That is,
when you run `git rev-parse --show-toplevel', it should print nothing.)
After you (somehow) install Poetry, you activate an environment first:

    cd web
    poetry install  # Poetry automatically picks a location for your virtual env

    ### OR.... (if you prefer to do it yourself)

    python3 -m venv <path>
    . <path>/bin/activate            # on Unix (macOS, Linux, BSD, etc.)
    <path>\Scripts\Activate.bat    REM Windows (Command Prompt or cmd.exe)
    <path>\Scripts\Activate.ps1      # Windows (PowerShell)

    # Tell poetry to use the virtual environment we are using; see
    # <https://python-poetry.org/docs/configuration/#local-configuration>
    poetry config virtualenvs.create false --local

Then install dependencies:

    poetry install

Now you can finally run the backend:

    ##### If you let poetry manage your environment above:
    cd src
    poetry run python -m clubradar  # runs on port 8000 by default, see -h for options

    ### OR... activate the environment by entering the command you see on screen:
    poetry env activate
    # OR use the `poetry shell' subcommand
    poetry self add poetry-plugin-shell
    poetry shell
    ### and NOW you can run python -m directly.
    cd src
    python -m clubradar

    ##### If you manage your own environment, just skip to the last step!
    python -m clubradar
